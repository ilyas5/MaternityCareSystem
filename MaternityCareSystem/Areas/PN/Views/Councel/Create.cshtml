@model MaternityCareSystem.Areas.PN.DataModels.PreNatal_Counsel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_MainLayout.cshtml";
}

@using (Ajax.BeginForm("Create", "Councel", new { area = "PN" }, new AjaxOptions() { HttpMethod = "Post", OnBegin = "begin", OnSuccess = "success" }))
{
    @Html.AntiForgeryToken()

    <div class="ibox">
        <div class="ibox-title"><h5>Add Councel</h5></div>

        <div class="ibox-content">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <lable class="control-label col-md-2">Patient Name</lable>
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.PatientId, null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PatientId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <lable class="control-label col-md-2">Visit</lable>
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.VisitNo, null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.VisitNo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <lable class="control-label col-md-2">Checkup-Of</lable>
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.CheckupOf, null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CheckupOf, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <div class="col-md-10">
                            <div class="form-check">
                                @Html.CheckBoxFor(model => model.DangerSigns, htmlAttributes: new { @class = "form-check-input" })
                                <label class="form-check-label" for="DangerSigns"><strong>Danger Signs (Return in or before 1 month</strong></label>
                                @Html.ValidationMessageFor(model => model.DangerSigns, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-10">
                            <div class="form-check">
                                @Html.CheckBoxFor(model => model.Hgb, htmlAttributes: new { @class = "form-check-input" })
                                <label class="form-check-label" for="Hgb"><strong>If Hgb <span><</span> 10(Retun in 2 weeks)</strong></label>
                                @Html.ValidationMessageFor(model => model.Hgb, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-10">
                            <div class="form-check">
                                <input type="checkbox" id="Protein" name="Protein" class="form-check-input" />
                                @*@Html.CheckBox("Protein", htmlAttributes: new { @class = "form-check-input" })*@
                                <label class="form-check-label" for="Protein"><strong>if Protein+ in Urine (2 weeks for monitor of BP)- Follow Protocols</strong></label>
                                @Html.ValidationMessageFor(model => model.Protein, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>





                    <div class="form-group">
                        <lable class="control-label col-md-2">Next Visit Date</lable>
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.NextVisitDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                            @Html.ValidationMessageFor(model => model.NextVisitDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <lable class="control-label col-md-2">Next Visit Notes</lable>
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.NextVisitNotes, 2, 66, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NextVisitNotes, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
            </div>



            <div class="form-group">
                <div class="offset-10 col-md-2">
                    <button class="btn btn-sm btn-primary" type="submit"><strong>Save</strong></button>
                    <a class="btn btn-sm btn-danger" href="@Url.Action("Index")"><strong>Cancel</strong></a>
                </div>
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
   
        <script>
        function begin() {
            ngo.HTML.Loader.Show();
        }

        function success(response) {

            if (!response.Error) {
                ngo.HTML.Alert.Show({ title: response.Message, message: " ", type: "success" }, function () {
                    //window.location = url;
                    window.location = "/PN/Councel/Index";
                });
            }
            else {
                ngo.HTML.Alert.Show({ title: response.Message, message: " ", type: "error" });
            }
            ngo.HTML.Loader.Hide();
        }
        function complete() {
            ngo.HTML.Loader.Hide();
        }
        </script>
    

}
